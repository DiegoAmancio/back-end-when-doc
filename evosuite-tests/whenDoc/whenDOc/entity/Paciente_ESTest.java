/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 19:50:25 BRT 2018
 */

package whenDoc.whenDOc.entity;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import java.util.LinkedHashSet;
import java.util.Set;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Paciente_ESTest extends Paciente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Endereco endereco0 = paciente0.getEndereco();
      assertNull(endereco0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setEmail("");
      assertEquals("", paciente0.getEmail());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getEmailSec();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      LinkedHashSet<Consulta> linkedHashSet0 = new LinkedHashSet<Consulta>();
      paciente0.setConsulta(linkedHashSet0);
      assertNull(paciente0.getTelefoneSec());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setTelefoneSec("");
      assertNull(paciente0.getCpf());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      boolean boolean0 = paciente0.isApp();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Set<Consulta> set0 = paciente0.getConsulta();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setApp(true);
      assertTrue(paciente0.isApp());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setEndereco((Endereco) null);
      assertNull(paciente0.getTipoSanguineo());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setTipoSanguineo("");
      assertNull(paciente0.getCpf());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setEmailSec("");
      assertNull(paciente0.getTelefone());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      LinkedHashSet<Medico> linkedHashSet0 = new LinkedHashSet<Medico>();
      paciente0.setMedicos(linkedHashSet0);
      assertNull(paciente0.getTipoSanguineo());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getSenha();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long(0L);
      Paciente paciente0 = new Paciente("", long0, "", "", "", "", (String) null, (String) null, false);
      assertFalse(paciente0.isApp());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Set<Medication> set0 = paciente0.getMedicamentos();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getTelefoneSec();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setNome("");
      assertNull(paciente0.getCpf());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setTelefone("");
      assertNull(paciente0.getTelefoneSec());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setMedicamentos((Set<Medication>) null);
      assertFalse(paciente0.isApp());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Set<Alergia> set0 = paciente0.getAlergias();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getTelefone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Long long0 = paciente0.getCpf();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setCpf((Long) null);
      assertNull(paciente0.getTelefoneSec());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setAlergias((Set<Alergia>) null);
      assertFalse(paciente0.isApp());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      paciente0.setSenha("");
      assertNull(paciente0.getTelefone());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      Set<Medico> set0 = paciente0.getMedicos();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Paciente paciente0 = new Paciente();
      String string0 = paciente0.getTipoSanguineo();
      assertNull(string0);
  }
}
